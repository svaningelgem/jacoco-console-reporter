name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v?[0-9]+.[0-9]+.[0-9]'
      - 'V?[0-9]+.[0-9]+.[0-9]'
      - 'v?[0-9]+.[0-9]+.[0-9]+-SNAPSHOT'
      - 'V?[0-9]+.[0-9]+.[0-9]+-SNAPSHOT'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Fake settings-security.xml to silence a huge stacktrace
        run: |
          touch ~/.m2/settings-security.xml

      - name: Set version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Setting version to $VERSION"
          mvn versions:set -DnewVersion=$VERSION -DgenerateBackupPoms=false

      - name: Build and Deploy to OSSRH
        run: |
          mvn -B clean deploy -pl jacoco-console-reporter -am -P release
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

      - name: scan build folder for exec data
        if: always()
        run: |
          find ~ -type f -name \*.exec | grep target

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            jacoco-console-reporter/target/*.jar
            jacoco-console-reporter/target/*-sources.jar
            jacoco-console-reporter/target/*-javadoc.jar
          generate_release_notes: true
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}